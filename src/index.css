@font-face {
    font-family: 'roboto-mono-thin';
    src: url('Font/roboto-mono/roboto-mono-variable-subset.woff2') format('woff2');
    font-display: block;
    font-weight: 350;
}

@font-face {
    font-family: 'roboto-mono-medium';
    src: url('Font/roboto-mono/roboto-mono-variable-subset.woff2') format('woff2');
    font-display: block;
    font-weight: 375;
}

@font-face {
    font-family: 'roboto-mono-bold';
    src: url('Font/roboto-mono/roboto-mono-variable-subset.woff2') format('woff2');
    font-display: block;
    font-weight: 800;
}

:root {
    --nav-bar-height: 8vh;
    --nav-bar-padding: min(1vh, 1vw);
    --nav-bar-content-height: calc(var(--nav-bar-height) - (2 * var(--nav-bar-padding)));
    --content-box-shadow: 0.00px 1.00px 25px 4px rgba(47, 46, 46, 0.3);
    --content-container-spacing: max(2vh, 2vw);
    --font-family-primary: 'roboto-mono-thin', Fallback, sans-serif;
    --font-family-medium: 'roboto-mono-medium', Fallback, sans-serif;
    --font-family-emphasis: 'roboto-mono-bold', Fallback, sans-serif;
    --font-size-basis: min(1em, 2.5vh, 2.5vw);
    --font-size-small: 85%;
    --font-size-medium: 125%;
    --font-size-large: 150%;
    --font-size-xlarge: 200%;
    --color-primary: white;
    --color-gray: #BEC7D5;
    --color-charcoal-translucent50: #30374bBF;
    --color-charcoal-translucent: #30374bd9;
    --color-green: #51b954;
    --color-charcoal: #30374b;
    --color-red: #dc3545;
    --form-valid-color: var(--color-green);
    --form-valid-focus-color: var(--color-green);
    --form-invalid-color: var(--color-red);
    --form-label-color: var(--color-primary);
    --form-placeholder-color: var(--color-primary);
    --form-submit-color: var(--color-primary);
}

/* Scrollbars */

on-scroll-container {
    scrollbar-width: thin;
    scrollbar-color: var(--color-charcoal) var(--color-gray);
}

:not(on-scroll-container) {
    scrollbar-width: thin;
    scrollbar-color: var(--color-gray) var(--color-charcoal);
}

on-scroll-container::-webkit-scrollbar {
    width: 10px;
    height: 10px;
}

on-scroll-container::-webkit-scrollbar-track {
    background: var(--color-gray);
}

on-scroll-container::-webkit-scrollbar-thumb {
    background: var(--color-charcoal);
}

on-scroll-container::-webkit-scrollbar-thumb:hover {
    background: #555;
}

:not(on-scroll-container)::-webkit-scrollbar {
    width: 1px;
    height: 1px;
}

:not(on-scroll-container)::-webkit-scrollbar-track {
    background: var(--color-charcoal);
}

:not(on-scroll-container)::-webkit-scrollbar-thumb {
    background: var(--color-gray);
}

/* utility classes */

.color-gray {
    color: var(--color-gray)
}

.color-green {
    color: var(--color-green)
}

.center-children {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.horizontal-center-children {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
}

.center-text {
    text-align: center;
}

.scroll-snap-container {
    scroll-snap-type: y mandatory;
    scroll-snap-stop: always;
}

.scroll-snap-center {
    scroll-snap-align: center;
}

.scroll-snap-start {
    scroll-snap-align: start;
}

.scroll-snap-none {
    scroll-snap-align: none;
}

.height-50 {
    height: 50%;
}

.height-75 {
    height: 75%;
}

.height-250 {
    height: 250%;
}

[enter-any-add-class=transition-fade-in]>* {
    opacity: 0;
    transition: opacity 1s;
}

.transition-fade-in {
    opacity: 1;
}

html, body {
    height: 100%;
    width: 100%;
    position: relative;
    margin: 0;
    overflow: hidden;
}

body {
    color: var(--color-primary);
    font-family: var(--font-family-primary);
    font-size: var(--font-size-basis);
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
    width: 100%;
    font-weight: unset;
    font-size: inherit;
}

h1, h2, h3 {
    font-family: var(--font-family-emphasis);
}

h4, h5, h6 {
    font-family: var(--font-family-primary);
}

on-scroll-container {
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    position: relative;
}

/* navigation bar */

.nav-bar-transparent {
    background-color: transparent;
}

.nav-bar-hide:hover {
    top: 0;
    background-color: var(--color-charcoal);
}

.nav-bar-hide {
    top: calc(1vh - var(--nav-bar-height));
}

nav-bar {
    padding: var(--nav-bar-padding);
    position: sticky;
    top: 0;
    width: calc(100% - (2 * var(--nav-bar-padding)));
    height: var(--nav-bar-content-height);
    z-index: 4;
    box-shadow: 0 0 4vh 0px rgb(45 45 45 / 15%);
    background-color: var(--color-charcoal);
    transition: top 0.5s, background-color 1s;
}

nav-entry {
    color: var(--color-primary);
    --background-color-hover: transparent;
    padding: 1%;
}

nav-entry.active {
    font-weight: bold;
    transform-origin: top center;
    transform: scale(1.1) translateY(-5%);
    color: var(--color-green);
    background-color: transparent;
}

nav-entry:not(.active):hover {
    border-bottom: 1px outset var(--color-primary);
}

nav-section {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
}

nav-section-header {
    display: flex;
    align-items: center;
    position: relative;
    width: 80%;
    height: var(--nav-bar-content-height);
    padding: 1%;
    text-align: center;
    text-transform: uppercase;
    font-size: var(--font-size-medium);
}

nav-section-header span {
    color: var(--color-green);
}

padding-section {
    display: block;
    position: relative;
}

#footer {
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;
    position: absolute;
    bottom: 0;
    width: 100%;
    height: var(--nav-bar-height);
    background-color: var(--color-charcoal);
}

#footer a {
    font-size: var(--font-size-small);
    color: var(--color-primary);
}

/* backgrounds */

tinted-background {
    --tint-rgba: var(--color-charcoal-translucent);
    background-repeat: no-repeat;
    background-size: cover;
}

#background1 {
    height: calc(150% * 2 / 3);
}

#background2 {
    --tint-rgba: var(--color-charcoal-translucent50);
    --background-image: url(Img/2.webp);
    height: calc(300% * 2 / 3);
}

#background3 {
    display: none;
}

#background4 {
    height: calc(150% * 2 / 3);
}

#background5 {
    --background-image: url(Img/4.webp);
    height: calc(325% * 2 / 3);
}

#background6 {
    height: calc(150% * 2 / 3);
}

/* Content */

.content-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: calc(100% - (4 * var(--content-container-spacing)));
    height: calc(100% - (4 * var(--content-container-spacing)) - var(--nav-bar-height));
    position: relative;
    padding: var(--content-container-spacing);
    margin: var(--content-container-spacing);
    background-color: var(--color-charcoal);
    z-index: 1;
    box-shadow: var(--content-box-shadow);
    box-sizing: content-box;
}

/* Intro */

#intro-container {
    width: calc(min(60vh, 60vw) - (4 * min(5vh, 5vw)));
    height: calc(min(60vh, 60vw) - (4 * min(5vh, 5vw)));
    padding: min(5vh, 5vw);
    margin: min(5vh, 5vw);
    text-align: start;
    text-transform: uppercase;
}

#intro-container span {
    color: var(--color-green);
}

#intro-container h1 {
    font-size: var(--font-size-xlarge);
}

#intro-container h2 {
    letter-spacing: 0.18em;
}

/* Resume */

#resume-container {
    justify-content: space-evenly;
}

#resume-summary-container {
    width: 80%;
    min-height: 0;
    max-height: 80%;
    box-shadow: var(--content-box-shadow);
}

#resume-summary-container>p {
    padding: 5%;
    margin: 5%;
    text-align: center;
    font-size: var(--font-size-small);
    line-height: 1.75em;
}

#resume-download-container {
    min-height: 0;
    max-height: 20%;
    width: 50%;
}

#resume-download-button {
    display: block;
    position: relative;
    padding: 2.5%;
    margin: 2.5%;
    background-color: transparent;
    border: solid var(--color-green) 1px;
    cursor: pointer;
    transition: background-color 0.5s;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    color: var(--color-primary);
    font-family: var(--font-family-medium);
    white-space: nowrap;
}

#resume-download-button:hover {
    background-color: var(--color-green);
}

/* progress bar */

@property --bar-completed-percentage {
    syntax: '<integer>';
    inherits: true;
    initial-value: 0;
}

progress-bar-borderless {
    display: flex;
    align-content: center;
    --bar-completed-color: var(--color-green);
    --bar-completed-percentage: 0;
    --bar-height: 10%;
    --label-left-width: 20%;
    --label-right-width: 5%;
    transition: --bar-completed-percentage 1s;
    will-change: --bar-completed-percentage;
    text-transform: uppercase;
}

progress-bar-borderless::part(label-left) {
    font-family: var(--font-family-medium);
    text-transform: uppercase;
}

/* projects */

#projects-container {
    flex-wrap: wrap;
    justify-content: flex-start;
    overflow-x: auto;
    overflow-y: hidden;
    font-size: var(--font-size-small);
    padding-left: 0;
}

projects::before {
    position: sticky;
    content: '';
    width: var(--content-container-spacing);
    height: 100%;
    left: 0;
    z-index: 5;
    background: linear-gradient(to right, var(--color-charcoal), transparent);
}

projects::after {
    position: sticky;
    content: '';
    width: var(--content-container-spacing);
    height: 100%;
    right: -2vw;
    background: linear-gradient(to right, transparent, var(--color-charcoal));
}

git-user, git-repo, project {
    width: calc(50% - 6vw);
    height: calc(50% - 4vw);
    box-shadow: var(--content-box-shadow);
    margin: 1vw;
    padding: 1vw;
}

git-user::part(grid-container), git-repo::part(grid-container), project {
    grid-template-rows: 20% 1fr 20%;
}

git-user::part(user-name), git-repo::part(repo-html-url), project a {
    font-family: var(--font-family-medium);
    text-transform: uppercase;
    font-size: var(--font-size-medium);
    color: var(--color-green);
}

git-repo, project {
    overflow: auto
}

git-repo::part(description), project div {
    height: 100%;
    width: 100%;
    overflow: hidden;
}

git-repo::part(description):hover, project div:hover {
    overflow: visible;
}

git-user::part(user-html-url)::before {
    content: "@";
}

git-user::part(user-html-url) {
    display: inline;
    color: var(--color-primary);
    border-bottom: 1px outset var(--color-primary);
    text-transform: lowercase;
    text-decoration: none;
    font-weight: normal;
}

git-user::part(user-public-repos), git-user::part(user-following) {
    border-color: var(--color-green);
    border-style: solid;
    border-width: 0 1px 0 1px;
}

git-repo::part(repo-html-url) {
    text-decoration: none;
}

project {
    position: relative;
    display: grid;
    grid-template-areas: "name" "cvparagraph" "icon";
    grid-column-gap: 2.5%;
    align-items: center;
}

project a {
    grid-area: name;
    align-self: flex-start;
    text-decoration: none;
}

project div {
    grid-area: cvparagraph;
}

project::after {
    content: "";
    grid-area: icon;
    height: min(3vw, 3vh);
    width: min(3vw, 3vh);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}

#project-secure-multithreaded-file-server::after {
    background-image: url('Img/icons8-cloud-backup-restore-24.webp');
}

#project-operating-system-pager::after {
    background-image: url('Img/icons8-memory-slot-30.webp');
}

#project-thread-library::after {
    background-image: url('Img/icons8-microchip-96.webp');
}

#project-lifesize-pacman::after {
    background-image: url('Img/icons8-pacman-100.webp');
}

#project-simultaneous-localization-and-mapping-slam-robot::after, #project-topological-mapping-robot::after {
    background-image: url('Img/icons8-science-fiction-100.webp');
}

#project-mips-r10k-microprocessor::after {
    background-image: url('Img/icons8-microchip-96.webp');
}

#project-tic-tac-toe-robot::after {
    background-image: url('Img/icons8-robot-90.webp');
}

@media (max-aspect-ratio: 3/4) {
    #projects-container {
        padding-left: var(--content-container-spacing);
        flex-wrap: nowrap;
        overflow-x: hidden;
        overflow-y: auto;
        font-size: unset;
    }
    #projects-container::before {
        position: sticky;
        content: '';
        width: 100%;
        height: var(--content-container-spacing);
        top: calc(-1 * var(--content-container-spacing));
        background: linear-gradient(to top, transparent, var( --color-charcoal));
        flex: 0 0 var(--content-container-spacing);
    }
    #projects-container::after {
        position: sticky;
        content: '';
        width: 100%;
        height: var(--content-container-spacing);
        bottom: calc(-1 * var(--content-container-spacing));
        background: linear-gradient(to bottom, transparent, var( --color-charcoal));
        flex: 1 0 10%;
    }
    git-user, git-repo, project {
        width: calc(100% - 4vw);
        height: unset;
        flex-grow: 1;
    }
    git-user::part(grid-container), git-repo::part(grid-container), project {
        grid-template-rows: auto auto auto;
        row-gap: 1vw;
    }
    git-repo, project {
        overflow: unset;
    }
    project div, git-repo::part(description) {
        height: unset;
        width: unset;
        overflow: unset;
    }
}

/* vertical timeline */

vertical-timeline {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    position: relative;
    height: calc(100% - var(--nav-bar-height));
    width: 100%;
    padding: 1%;
}

vertical-timeline on-intersection-add-class {
    position: relative;
    scroll-snap-align: center;
}

vertical-timeline> :nth-child(1) {
    scroll-snap-align: none;
}

vertical-timeline-entry {
    display: block;
    position: relative;
    width: 90%;
    height: 100%;
    box-sizing: border-box;
    margin: 0 5% 0 5%;
}

vertical-timeline-entry div-border {
    display: block;
    width: 100%;
    height: 100%;
    position: relative;
    border-top: 1px dashed var(--color-green);
    border-left: 1px dashed var(--color-green);
}

vertical-timeline-entry div {
    height: 100%;
    width: 95%;
    padding-left: 5%;
}

vertical-timeline-entry h4 {
    position: relative;
    width: 95%;
    padding-left: 5%;
    text-transform: uppercase;
    color: var(--color-green);
}

vertical-timeline-entry h4::after {
    --diameter: 15px;
    display: block;
    position: absolute;
    bottom: calc(var(--diameter) / -2);
    left: calc(var(--diameter) / -2);
    width: var(--diameter);
    height: var(--diameter);
    content: "";
    background-image: linear-gradient(var(--color-green), var(--color-green));
    clip-path: circle(25%);
}

vertical-timeline-entry h5 {
    font-family: var(--font-family-medium);
    text-transform: uppercase;
    color: var(--color-green);
}

vertical-timeline-entry h6 {
    margin-bottom: 1em;
}

vertical-timeline-entry p {
    width: 100%;
    margin: 0;
}

@media (min-aspect-ratio: 3/4) {
    vertical-timeline {
        align-items: flex-start;
    }
    vertical-timeline on-intersection-add-class {
        width: 50%;
    }
    vertical-timeline-entry {
        width: 95%;
    }
    vertical-timeline> :nth-child(even) {
        align-self: flex-end;
    }
    vertical-timeline> :nth-child(odd) vertical-timeline-entry {
        margin: 0;
        margin-left: 5%;
    }
    vertical-timeline> :nth-child(even) vertical-timeline-entry {
        margin: 0;
        margin-right: 5%;
    }
    vertical-timeline> :nth-child(odd) h4 {
        padding-left: 0;
        padding-right: 5%;
    }
    vertical-timeline> :nth-child(odd) h4::after {
        left: unset;
        right: calc(var(--diameter) / -2);
    }
    vertical-timeline> :nth-child(even) h4::after {
        left: calc(var(--diameter) / -2);
    }
    vertical-timeline> :nth-child(odd) div-border {
        border-left: none;
        border-right: 1px dashed var(--color-green);
    }
    vertical-timeline> :nth-child(odd) div {
        padding-left: 0;
        padding-right: 5%;
    }
    vertical-timeline :is(h4, h6, p) {
        font-size: var(--font-size-small);
    }
}

@keyframes bounce {
    0% {
        opacity: 0;
        transform: scale(0.9);
    }
    80% {
        opacity: 1;
        transform: scale(1.03);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

vertical-timeline-entry div {
    opacity: 0;
    transform: scale(0.90);
    transform-origin: top center;
}

vertical-timeline-entry :is(h4, div-border) {
    opacity: 0;
}

vertical-timeline-entry.bounce :is(h4, div-border) {
    transition: opacity 0.2s;
    opacity: 1;
}

vertical-timeline-entry.bounce div {
    animation: bounce 0.2s ease 0.2s 1 normal forwards running;
    will-change: transform, opacity;
}

#contact-form {
    align-items: flex-start;
}

/* form control */

form-control {
    display: flex;
    flex-direction: column;
    flex-basis: auto;
    flex-shrink: 0;
    flex-grow: 0;
    max-height: 15%;
    width: 100%;
    margin-bottom: 1%;
}

/* form control container */

form-control::part(container) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex-grow: 1;
    position: relative;
    width: 98%;
    padding: 1%;
    outline-color: transparent;
    font-size: var(--font-size-small);
}

form-control:not([type=submit])::part(container) {
    background-color: transparent;
    outline: 1px solid var(--color-gray);
}

form-control::part(control) {
    color: var(--color-primary);
}

form-control:not([empty]):is(:invalid, [internals-invalid]):focus-within::part(container) {
    outline-color: var(--form-invalid-color);
}

form-control:not([type=submit], [empty]):is(:valid, [internals-valid]):focus-within::part(container) {
    outline-color: var(--form-valid-color);
}

form-control[empty]:focus-within::part(container) {
    outline-color: var(--form-invalid-color);
}

form-control::part(control) {
    flex-grow: 1;
}

/* form control validation message */

form-control::part(validation-message) {
    display: none;
}

form-control:not(:focus-within)[visited]::part(validation-message) {
    display: block;
    color: var(--form-invalid-color);
    font-size: var(--font-size-small);
    background-color: var(--container-color);
}

/* form control label */

form-control::part(label) {
    color: var(--form-placeholder-color);
}

form-control[visited]:not([type=submit]):is([required], :not([empty]))::part(label), form-control:not([type=submit]):focus-within::part(label) {
    display: block;
    position: unset;
    width: 100%;
    height: unset;
    font-size: 60%;
    color: var(--form-label-color);
}

form-control::part(control) {
    height: 0;
}

form-control[visited]:not([type=submit]):is([required], :not([empty]))::part(control), form-control:not([type=submit]):focus-within::part(control) {
    height: auto;
}

form-control[type=textarea] {
    flex-grow: 1;
    max-height: 30%;
}

form-control[type=textarea]::part(control) {
    resize: none;
}

/* form control submit */

form-control[type=submit]::part(container) {
    background-color: var(--form-invalid-color);
    align-items: center;
}

form-control[type=submit]::part(label) {
    color: var(--form-submit-color);
}

form:is(:valid:not([internals-invalid]), [internals-valid]) form-control[type=submit]::part(container) {
    background-color: var(--form-valid-color);
}

form:is(:valid:not([internals-invalid]), [internals-valid]) form-control[type=submit]:is(:hover, :focus-within, :disabled, [disabled])::part(container) {
    background-color: var(--form-valid-focus-color);
}

form:is(:valid:not([internals-invalid]), [internals-valid]) form-control[type=submit]:is(:hover, :focus-within):not(:disabled, [disabled])::part(container) {
    cursor: pointer;
}

.squashed-form-control {
    transition: opacity, max-height, padding, margin, overflow;
    opacity: 0;
    max-height: 0;
    padding: 0;
    margin: 0;
    overflow: hidden;
}